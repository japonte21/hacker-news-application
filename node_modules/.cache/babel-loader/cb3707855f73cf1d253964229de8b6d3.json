{"ast":null,"code":"const isNotArchived = archivedIds => story => archivedIds.indexOf(story.objectID) === -1;\n\nconst getReadableStories = ({\n  storyState,\n  archiveState\n}) => storyState.stories.filter(isNotArchived(archiveState));\n\nconst getFetchError = ({\n  storyState\n}) => storyState.error;\n\nexport { getReadableStories, getFetchError };","map":{"version":3,"sources":["/Users/cb12/WSO/hacker-news-app/src/selectors/story.js"],"names":["isNotArchived","archivedIds","story","indexOf","objectID","getReadableStories","storyState","archiveState","stories","filter","getFetchError","error"],"mappings":"AAAA,MAAMA,aAAa,GAAIC,WAAD,IAAkBC,KAAD,IACrCD,WAAW,CAACE,OAAZ,CAAoBD,KAAK,CAACE,QAA1B,MAAwC,CAAC,CAD3C;;AAGA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KACzBD,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0BT,aAAa,CAACO,YAAD,CAAvC,CADF;;AAGA,MAAMG,aAAa,GAAG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAoBA,UAAU,CAACK,KAArD;;AAEA,SAASN,kBAAT,EAA6BK,aAA7B","sourcesContent":["const isNotArchived = (archivedIds) => (story) =>\n  archivedIds.indexOf(story.objectID) === -1;\n\nconst getReadableStories = ({ storyState, archiveState }) =>\n  storyState.stories.filter(isNotArchived(archiveState));\n\nconst getFetchError = ({ storyState }) => storyState.error;\n\nexport { getReadableStories, getFetchError };\n"]},"metadata":{},"sourceType":"module"}