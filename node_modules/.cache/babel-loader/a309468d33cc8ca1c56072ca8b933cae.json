{"ast":null,"code":"import _classCallCheck from\"/Users/cb12/WSO/hacker-news-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cb12/WSO/hacker-news-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/cb12/WSO/hacker-news-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/cb12/WSO/hacker-news-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cb12/WSO/hacker-news-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import{doFetchStories}from\"../actions/story\";import Button from\"./Button\";var applyQueryState=function applyQueryState(query){return function(){return{query:query};};};var SearchStories=/*#__PURE__*/function(_Component){_inherits(SearchStories,_Component);var _super=_createSuper(SearchStories);function SearchStories(props){var _this;_classCallCheck(this,SearchStories);_this=_super.call(this,props);_this.state={query:\"\"};_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(SearchStories,[{key:\"onSubmit\",value:function onSubmit(event){var query=this.state.query;if(query){this.props.onFetchStories(query);this.setState(applyQueryState(\"\"));}event.preventDefault();}},{key:\"onChange\",value:function onChange(event){var value=event.target.value;this.setState(applyQueryState(value));}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:this.state.query,onChange:this.onChange}),/*#__PURE__*/React.createElement(Button,{type:\"submit\"},\"Search\"));}}]);return SearchStories;}(Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onFetchStories:function onFetchStories(query){return dispatch(doFetchStories(query));}};};export default connect(null,mapDispatchToProps)(SearchStories);","map":{"version":3,"sources":["/Users/cb12/WSO/hacker-news-app/src/components/SearchStories.js"],"names":["React","Component","connect","doFetchStories","Button","applyQueryState","query","SearchStories","props","state","onChange","bind","onSubmit","event","onFetchStories","setState","preventDefault","value","target","mapDispatchToProps","dispatch"],"mappings":"8uBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAW,kBAAO,CACxCA,KAAK,CAALA,KADwC,CAAP,EAAX,EAAxB,C,GAIMC,CAAAA,a,8GACJ,uBAAYC,KAAZ,CAAmB,+CACjB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACXH,KAAK,CAAE,EADI,CAAb,CAIA,MAAKI,QAAL,CAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB,CACA,MAAKC,QAAL,CAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB,CARiB,aASlB,C,oEAEQE,K,CAAO,IACNP,CAAAA,KADM,CACI,KAAKG,KADT,CACNH,KADM,CAEd,GAAIA,KAAJ,CAAW,CACT,KAAKE,KAAL,CAAWM,cAAX,CAA0BR,KAA1B,EAEA,KAAKS,QAAL,CAAcV,eAAe,CAAC,EAAD,CAA7B,EACD,CAEDQ,KAAK,CAACG,cAAN,GACD,C,0CAEQH,K,CAAO,IACNI,CAAAA,KADM,CACIJ,KAAK,CAACK,MADV,CACND,KADM,CAEd,KAAKF,QAAL,CAAcV,eAAe,CAACY,KAAD,CAA7B,EACD,C,uCAEQ,CACP,mBACE,4BAAM,QAAQ,CAAE,KAAKL,QAArB,eACE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAE,KAAKH,KAAL,CAAWH,KAArC,CAA4C,QAAQ,CAAE,KAAKI,QAA3D,EADF,cAEE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,WAFF,CADF,CAMD,C,2BAnCyBT,S,EAsC5B,GAAMkB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCN,cAAc,CAAE,wBAACR,KAAD,QAAWc,CAAAA,QAAQ,CAACjB,cAAc,CAACG,KAAD,CAAf,CAAnB,EADwB,CAAf,EAA3B,CAIA,cAAeJ,CAAAA,OAAO,CAAC,IAAD,CAAOiB,kBAAP,CAAP,CAAkCZ,aAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { doFetchStories } from \"../actions/story\";\nimport Button from \"./Button\";\n\nconst applyQueryState = (query) => () => ({\n  query,\n});\n\nclass SearchStories extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: \"\",\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    const { query } = this.state;\n    if (query) {\n      this.props.onFetchStories(query);\n\n      this.setState(applyQueryState(\"\"));\n    }\n\n    event.preventDefault();\n  }\n\n  onChange(event) {\n    const { value } = event.target;\n    this.setState(applyQueryState(value));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input type=\"text\" value={this.state.query} onChange={this.onChange} />\n        <Button type=\"submit\">Search</Button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFetchStories: (query) => dispatch(doFetchStories(query)),\n});\n\nexport default connect(null, mapDispatchToProps)(SearchStories);\n"]},"metadata":{},"sourceType":"module"}