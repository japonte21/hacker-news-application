{"ast":null,"code":"var _jsxFileName = \"/Users/cb12/WSO/hacker-news-app/src/components/Stories.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { doArchiveStory } from \"../actions/archive\";\nimport { getReadableStories } from \"../selectors/story\";\nimport \"./Stories.css\";\nimport Story from \"./Story\";\nconst COLUMNS = {\n  title: {\n    label: \"Title\",\n    width: \"40%\"\n  },\n  author: {\n    label: \"Author\",\n    width: \"30%\"\n  },\n  comments: {\n    label: \"Comments\",\n    width: \"10%\"\n  },\n  points: {\n    label: \"Points\",\n    width: \"10%\"\n  },\n  archive: {\n    width: \"10%\"\n  }\n};\n\nconst Stories = ({\n  stories,\n  onArchive\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"stories\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(StoriesHeader, {\n  columns: COLUMNS,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}), (stories || []).map(story => /*#__PURE__*/React.createElement(Story, {\n  key: story.objectID,\n  story: story,\n  columns: COLUMNS,\n  onArchive: onArchive,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n})));\n\nconst StoriesHeader = ({\n  columns\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"stories-header\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }\n}, Object.keys(columns).map(key => /*#__PURE__*/React.createElement(\"span\", {\n  key: key,\n  style: {\n    width: columns[key].width\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n}, columns[key].label)));\n\nconst mapStateToProps = state => ({\n  stories: getReadableStories(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onArchive: id => dispatch(doArchiveStory(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stories);","map":{"version":3,"sources":["/Users/cb12/WSO/hacker-news-app/src/components/Stories.js"],"names":["React","connect","doArchiveStory","getReadableStories","Story","COLUMNS","title","label","width","author","comments","points","archive","Stories","stories","onArchive","map","story","objectID","StoriesHeader","columns","Object","keys","key","mapStateToProps","state","mapDispatchToProps","dispatch","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,OAAO,eAAP;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,KAAK,EAAE;AAFF,GADO;AAKdC,EAAAA,MAAM,EAAE;AACNF,IAAAA,KAAK,EAAE,QADD;AAENC,IAAAA,KAAK,EAAE;AAFD,GALM;AASdE,EAAAA,QAAQ,EAAE;AACRH,IAAAA,KAAK,EAAE,UADC;AAERC,IAAAA,KAAK,EAAE;AAFC,GATI;AAadG,EAAAA,MAAM,EAAE;AACNJ,IAAAA,KAAK,EAAE,QADD;AAENC,IAAAA,KAAK,EAAE;AAFD,GAbM;AAiBdI,EAAAA,OAAO,EAAE;AACPJ,IAAAA,KAAK,EAAE;AADA;AAjBK,CAAhB;;AAsBA,MAAMK,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,kBACd;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAe,EAAA,OAAO,EAAEV,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAGG,CAACS,OAAO,IAAI,EAAZ,EAAgBE,GAAhB,CAAqBC,KAAD,iBACnB,oBAAC,KAAD;AACE,EAAA,GAAG,EAAEA,KAAK,CAACC,QADb;AAEE,EAAA,KAAK,EAAED,KAFT;AAGE,EAAA,OAAO,EAAEZ,OAHX;AAIE,EAAA,SAAS,EAAEU,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CAHH,CADF;;AAeA,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACpB;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBJ,GAArB,CAA0BO,GAAD,iBACxB;AAAM,EAAA,GAAG,EAAEA,GAAX;AAAgB,EAAA,KAAK,EAAE;AAAEf,IAAAA,KAAK,EAAEY,OAAO,CAACG,GAAD,CAAP,CAAaf;AAAtB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGY,OAAO,CAACG,GAAD,CAAP,CAAahB,KADhB,CADD,CADH,CADF;;AAUA,MAAMiB,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,OAAO,EAAEX,kBAAkB,CAACsB,KAAD;AADO,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,SAAS,EAAGa,EAAD,IAAQD,QAAQ,CAACzB,cAAc,CAAC0B,EAAD,CAAf;AADa,CAAf,CAA3B;;AAIA,eAAe3B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,OAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { doArchiveStory } from \"../actions/archive\";\nimport { getReadableStories } from \"../selectors/story\";\nimport \"./Stories.css\";\n\nimport Story from \"./Story\";\n\nconst COLUMNS = {\n  title: {\n    label: \"Title\",\n    width: \"40%\",\n  },\n  author: {\n    label: \"Author\",\n    width: \"30%\",\n  },\n  comments: {\n    label: \"Comments\",\n    width: \"10%\",\n  },\n  points: {\n    label: \"Points\",\n    width: \"10%\",\n  },\n  archive: {\n    width: \"10%\",\n  },\n};\n\nconst Stories = ({ stories, onArchive }) => (\n  <div className=\"stories\">\n    <StoriesHeader columns={COLUMNS} />\n\n    {(stories || []).map((story) => (\n      <Story\n        key={story.objectID}\n        story={story}\n        columns={COLUMNS}\n        onArchive={onArchive}\n      />\n    ))}\n  </div>\n);\n\nconst StoriesHeader = ({ columns }) => (\n  <div className=\"stories-header\">\n    {Object.keys(columns).map((key) => (\n      <span key={key} style={{ width: columns[key].width }}>\n        {columns[key].label}\n      </span>\n    ))}\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  stories: getReadableStories(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onArchive: (id) => dispatch(doArchiveStory(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stories);\n"]},"metadata":{},"sourceType":"module"}